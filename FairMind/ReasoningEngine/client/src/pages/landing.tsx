import { useLocation } from 'wouter';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Sparkles, MessageSquare, Users, CheckCircle, ArrowRight, Mic } from 'lucide-react';
import { useAuth } from '@/lib/auth-context';
import { ThemeToggle } from '@/components/theme-toggle';
import heroImage from '@assets/generated_images/Professional_mediation_hero_image_bc4097fa.png';

export default function Landing() {
  const [, setLocation] = useLocation();
  const { user } = useAuth();

  const handleGetStarted = () => {
    if (!user) {
      setLocation('/login');
    } else {
      setLocation('/dashboard');
    }
  };

  const features = [
    {
      icon: <MessageSquare className="w-6 h-6" />,
      title: "Real-Time Communication",
      description: "Exchange messages in real-time with voice or text input for natural conversation flow."
    },
    {
      icon: <Mic className="w-6 h-6" />,
      title: "Voice Transcription",
      description: "Speak your mind naturally. Our AI transcribes voice messages automatically."
    },
    {
      icon: <Sparkles className="w-6 h-6" />,
      title: "AI-Powered Resolutions",
      description: "Get three intelligent resolution options generated by advanced AI analyzing your conversation."
    },
    {
      icon: <Users className="w-6 h-6" />,
      title: "Fair Voting System",
      description: "Both participants vote on solutions independently, ensuring fairness and mutual agreement."
    },
    {
      icon: <CheckCircle className="w-6 h-6" />,
      title: "Verified Outcomes",
      description: "When both parties agree, resolutions are saved to your history for future reference."
    },
    {
      icon: <ArrowRight className="w-6 h-6" />,
      title: "Simple Process",
      description: "Create a room, discuss the issue, get AI suggestions, and reach resolution together."
    }
  ];

  const steps = [
    {
      number: 1,
      title: "Create a Room",
      description: "Start by creating a private room and share the code with the other person."
    },
    {
      number: 2,
      title: "Discuss the Issue",
      description: "Both participants share their perspectives using voice or text messages."
    },
    {
      number: 3,
      title: "Get AI Suggestions",
      description: "Our AI analyzes the conversation and generates three fair resolution options."
    },
    {
      number: 4,
      title: "Vote & Resolve",
      description: "Both parties vote independently. When you agree, the dispute is officially resolved."
    }
  ];

  const testimonials = [
    {
      quote: "FairMind helped my partner and I resolve a budget disagreement in under 10 minutes. The AI suggestions were surprisingly balanced and fair.",
      name: "Sarah Chen",
      role: "Product Manager"
    },
    {
      quote: "As a mediator, I've been impressed by how FairMind facilitates constructive dialogue. It's like having an AI assistant in every session.",
      name: "Marcus Johnson",
      role: "Professional Mediator"
    },
    {
      quote: "The voice transcription makes it so easy to express complex feelings without typing. The resolutions we got were thoughtful and practical.",
      name: "Priya Patel",
      role: "Entrepreneur"
    }
  ];

  return (
    <div className="min-h-screen">
      {/* Theme Toggle - Fixed Top Right */}
      <div className="fixed top-6 right-6 z-50">
        <ThemeToggle />
      </div>

      {/* Hero Section */}
      <section className="relative min-h-[85vh] flex items-center justify-center overflow-hidden">
        <div 
          className="absolute inset-0 bg-cover bg-center"
          style={{ backgroundImage: `url(${heroImage})` }}
        />
        <div className="absolute inset-0 bg-gradient-to-t from-black/80 via-black/50 to-black/30" />
        
        <div className="relative z-10 max-w-4xl mx-auto px-6 py-20 text-center">
          <h1 className="text-5xl md:text-6xl font-bold text-white mb-6">
            Resolve Disputes Fairly with AI
          </h1>
          <p className="text-xl md:text-2xl text-white/90 mb-8 leading-relaxed">
            Two people, one AI mediator. Find common ground through intelligent conversation analysis and personalized resolution suggestions.
          </p>
          <Button
            size="lg"
            onClick={handleGetStarted}
            className="h-14 px-8 text-base font-medium bg-primary text-primary-foreground border-2 border-primary-border backdrop-blur-md"
            data-testid="button-get-started"
          >
            Get Started Free
            <ArrowRight className="ml-2 w-5 h-5" />
          </Button>
          <p className="text-white/70 text-sm mt-4">
            <CheckCircle className="inline w-4 h-4 mr-1" />
            Join 10,000+ successful resolutions
          </p>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-20 px-6 bg-background">
        <div className="max-w-6xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold mb-4">
              Intelligent Mediation Features
            </h2>
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
              Everything you need to reach fair, AI-assisted resolutions
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {features.map((feature, index) => (
              <Card key={index} className="p-6 hover-elevate" data-testid={`card-feature-${index}`}>
                <div className="text-primary mb-4">{feature.icon}</div>
                <h3 className="text-xl font-semibold mb-3">{feature.title}</h3>
                <p className="text-muted-foreground leading-relaxed">{feature.description}</p>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* How It Works Section */}
      <section className="py-20 px-6 bg-card">
        <div className="max-w-4xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold mb-4">
              How It Works
            </h2>
            <p className="text-lg text-muted-foreground">
              Four simple steps to resolve any dispute
            </p>
          </div>
          
          <div className="space-y-8">
            {steps.map((step, index) => (
              <div key={index} className="flex gap-6 items-start pb-8 border-b border-border last:border-0" data-testid={`step-${index}`}>
                <div className="flex-shrink-0 w-12 h-12 rounded-full bg-primary text-primary-foreground flex items-center justify-center font-bold text-lg">
                  {step.number}
                </div>
                <div className="flex-1">
                  <h3 className="text-xl font-semibold mb-2">{step.title}</h3>
                  <p className="text-muted-foreground leading-relaxed">{step.description}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Testimonials Section */}
      <section className="py-20 px-6 bg-background">
        <div className="max-w-6xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold mb-4">
              What People Say
            </h2>
            <p className="text-lg text-muted-foreground">
              Real experiences from real users
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {testimonials.map((testimonial, index) => (
              <Card key={index} className="p-6" data-testid={`testimonial-${index}`}>
                <div className="text-4xl text-primary/20 mb-4">"</div>
                <p className="text-base leading-relaxed mb-6 italic">{testimonial.quote}</p>
                <div className="flex items-center gap-3">
                  <div className="w-12 h-12 rounded-full bg-primary/10 flex items-center justify-center text-primary font-semibold">
                    {testimonial.name.charAt(0)}
                  </div>
                  <div>
                    <div className="font-semibold">{testimonial.name}</div>
                    <div className="text-sm text-muted-foreground">{testimonial.role}</div>
                  </div>
                </div>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 px-6 bg-card">
        <div className="max-w-3xl mx-auto text-center">
          <h2 className="text-3xl md:text-4xl font-bold mb-6">
            Ready to Resolve Your Next Dispute?
          </h2>
          <p className="text-lg text-muted-foreground mb-8">
            Get started for free with 3 AI resolutions per day
          </p>
          <Button
            size="lg"
            onClick={handleGetStarted}
            className="h-12"
            data-testid="button-cta-get-started"
          >
            Start Resolving Now
            <ArrowRight className="ml-2 w-5 h-5" />
          </Button>
        </div>
      </section>
    </div>
  );
}
